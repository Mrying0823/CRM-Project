<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.example.crm.workbench.mapper.ActivityMapper" >
  <resultMap id="BaseResultMap" type="org.example.crm.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 08 17:12:25 CST 2023.
    -->
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="owner" property="owner" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="CHAR" />
    <result column="end_date" property="endDate" jdbcType="CHAR" />
    <result column="cost" property="cost" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="edit_time" property="editTime" jdbcType="CHAR" />
    <result column="edit_by" property="editBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 08 17:12:25 CST 2023.
    -->
    id, owner, name, start_date, end_date, cost, description, create_time, create_by, 
    edit_time, edit_by
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 08 17:12:25 CST 2023.
    -->
    select 
    <include refid="Base_Column_List" />
    from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 08 17:12:25 CST 2023.
    -->
    delete from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="org.example.crm.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 08 17:12:25 CST 2023.
    -->
    insert into tbl_activity (id, owner, name, start_date, 
      end_date, cost, description, 
      create_time, create_by, edit_time, 
      edit_by)
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=CHAR}, 
      #{endDate,jdbcType=CHAR}, #{cost,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{editTime,jdbcType=CHAR}, 
      #{editBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.example.crm.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 08 17:12:25 CST 2023.
    -->
    insert into tbl_activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="owner != null" >
        owner,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="editTime != null" >
        edit_time,
      </if>
      <if test="editBy != null" >
        edit_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null" >
        #{editBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.crm.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 08 17:12:25 CST 2023.
    -->
    update tbl_activity
    <set >
      <if test="owner != null" >
        owner = #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        edit_time = #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null" >
        edit_by = #{editBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.crm.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 08 17:12:25 CST 2023.
    -->
    update tbl_activity
    set owner = #{owner,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=CHAR},
      end_date = #{endDate,jdbcType=CHAR},
      cost = #{cost,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=CHAR},
      edit_by = #{editBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

  <!-- 编写保存创建的市场活动的 sql 语句 -->
  <insert id="insertActivity" parameterType="org.example.crm.workbench.domain.Activity" >
    insert into tbl_activity (id, owner, name, start_date,
    end_date, cost, description,
    create_time, create_by, edit_time,
    edit_by)
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=CHAR},
    #{endDate,jdbcType=CHAR}, #{cost,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
    #{createTime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{editTime,jdbcType=CHAR},
    #{editBy,jdbcType=VARCHAR})
  </insert>

  <!-- 编写查询市场活动列表的 sql 语句 -->
  <!-- 内连接、左外连接 -->
  <!-- 动态 sql 模糊查询 -->
  <!-- 注意逗号隔开 -->
  <select id="selectActivityByConditionForPage" resultMap="BaseResultMap" parameterType="map" >
    select
    a.id, a.name, u1.name as owner, a.start_date, a.end_date, a.cost, a.description, a.create_time,
    u2.name as create_by, a.edit_time,
    u3.name as edit_by

    from tbl_activity a

    join tbl_user u1 on u1.id = a.owner
    join tbl_user u2 on u2.id = a.create_by
    left join tbl_user u3 on u3.id = a.edit_by

    <where>
      <!-- 根据名称查询 -->
      <if test="name != null and name != ''">
          and a.name like '%' #{name,jdbcType=VARCHAR} '%'
      </if>

      <!-- 根据所有者查询 -->
      <if test="owner != null and owner != ''">
        and u1.name like '%' #{owner,jdbcType=VARCHAR} '%'
      </if>

      <!-- 根据开始日期查询 &：转义 gt：greater 一定要加分号-->
      <if test="startDate != null and startDate != ''">
        and a.start_date &gt;= #{startDate,jdbcType=CHAR}
      </if>

      <!-- 根据结束日期查询 &：转义 lt：lower 一定要加分号 -->
      <if test="endDate != null and endDate != ''">
        and a.end_date &lt;= #{endDate,jdbcType=CHAR}
      </if>
    </where>

    <!-- 先排序再分页 -->
    order by a.create_time desc
    limit #{beginNo}, #{pageSize}
  </select>

  <!-- 编写查询市场活动的总条数的 sql 语句 -->
  <!-- 注意 resultType -->
  <select id="selectCountOfActivityByCondition" resultType="Integer" parameterType="map" >
    select count(*)

    from tbl_activity a

    join tbl_user u1 on u1.id = a.owner
    join tbl_user u2 on u2.id = a.create_by
    left join tbl_user u3 on u3.id = a.edit_by

    <where>
      <!-- 根据名称查询 -->
      <if test="name != null and name != ''">
        and a.name like '%' #{name,jdbcType=VARCHAR} '%'
      </if>

      <!-- 根据所有者查询 -->
      <if test="owner != null and owner != ''">
        and u1.name like '%' #{owner,jdbcType=CHAR} '%'
      </if>

      <!-- 根据开始日期查询 &：转义 gt：greater 一定要加分号-->
      <if test="startDate != null and startDate != ''">
        and a.start_date &gt;= #{startDate,jdbcType=CHAR}
      </if>

      <!-- 根据结束日期查询 &：转义 lt：lower 一定要加分号 -->
      <if test="endDate != null and endDate != ''">
        and a.end_date &lt;= #{endDate,jdbcType=CHAR}
      </if>
    </where>
  </select>

  <!-- 编写根据 id 数组批量删除市场活动的 sql 语句 -->
  <delete id="deleteActivityByIds" parameterType="java.lang.String" >
    delete from tbl_activity
    where id in
    <!-- 遍历数组 -->
    <!-- open 循环开始时插入的字符串 close 循环结束时插入的字符串 构建完整的的 in 子句 -->
    <foreach collection="array" item="id" separator="," open="(" close=")">
      <!-- 获取每一个 id 值 -->
      #{id,jdbcType=CHAR}
    </foreach>
  </delete>

  <!-- 根据 id 查询市场活动，用于将选中市场活动详细显示在修改模态窗口 -->
  <select id="selectActivityById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </select>

  <!-- 编写更新修改后的市场活动的 sql 语句 -->
  <update id="updateActivity" parameterType="org.example.crm.workbench.domain.Activity" >
    update tbl_activity
    set owner = #{owner,jdbcType=CHAR},
    name = #{name,jdbcType=VARCHAR},
    start_date = #{startDate,jdbcType=CHAR},
    end_date = #{endDate,jdbcType=CHAR},
    cost = #{cost,jdbcType=VARCHAR},
    description = #{description,jdbcType=VARCHAR},
    edit_time = #{editTime,jdbcType=CHAR},
    edit_by = #{editBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

  <!-- 查询所有的市场活动 -->
  <select id="selectAllActivity" resultMap="BaseResultMap">
    select
      a.id, a.name, u1.name as owner, a.start_date, a.end_date, a.cost, a.description, a.create_time,
      u2.name as create_by, a.edit_time,
      u3.name as edit_by

    from tbl_activity a

    join tbl_user u1 on u1.id = a.owner
    join tbl_user u2 on u2.id = a.create_by
    left join tbl_user u3 on u3.id = a.edit_by

    order by a.create_time desc
  </select>

  <!-- 编写根据 id 数组查询市场活动的 sql 语句 -->
  <select id="selectActivityByIds" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    a.id, a.name, u1.name as owner, a.start_date, a.end_date, a.cost, a.description, a.create_time,
    u2.name as create_by, a.edit_time,
    u3.name as edit_by

    from tbl_activity a

    join tbl_user u1 on u1.id = a.owner
    join tbl_user u2 on u2.id = a.create_by
    left join tbl_user u3 on u3.id = a.edit_by

    where a.id in
    <!-- 遍历数组 -->
    <!-- open 循环开始时插入的字符串 close 循环结束时插入的字符串 构建完整的的 in 子句 -->
    <foreach collection="array" item="id" separator="," open="(" close=")">
      <!-- 获取每一个 id 值 -->
      #{id,jdbcType=CHAR}
    </foreach>

    order by a.create_time desc
  </select>

  <!-- 编写保存导入市场活动列表的 sql 语句 -->
  <insert id="insertActivityByList" parameterType="org.example.crm.workbench.domain.Activity" >
    insert into tbl_activity (id, owner, name, start_date,
                              end_date, cost, description,
                              create_time, create_by, edit_time,
                              edit_by)
    values
    <!-- 遍历列表 -->
    <foreach collection="list" item="obj" separator=",">
      <!-- 获取每一个 Activity 对象 -->
        (#{obj.id,jdbcType=CHAR}, #{obj.owner,jdbcType=CHAR}, #{obj.name,jdbcType=VARCHAR}, #{obj.startDate,jdbcType=CHAR},
        #{obj.endDate,jdbcType=CHAR}, #{obj.cost,jdbcType=VARCHAR}, #{obj.description,jdbcType=VARCHAR},
        #{obj.createTime,jdbcType=CHAR}, #{obj.createBy,jdbcType=VARCHAR}, #{obj.editTime,jdbcType=CHAR},
        #{obj.editBy,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <!-- 编写根据 id 查询市场活动的 sql 语句，用于市场明细 -->
  <select id="selectDetailActivityById" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    a.id, a.name, u1.name as owner, a.start_date, a.end_date, a.cost, a.description, a.create_time,
    u2.name as create_by, a.edit_time,
    u3.name as edit_by

    from tbl_activity a

    join tbl_user u1 on u1.id = a.owner
    join tbl_user u2 on u2.id = a.create_by
    left join tbl_user u3 on u3.id = a.edit_by

    where a.id = #{id,jdbcType=CHAR}
  </select>

  <!-- 编写根据 clue_id 查询与线索相关联的市场活动的 sql 语句，用于线索明细 -->
  <select id="selectActivityForDetailByClueId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    a.id, a.name, u1.name as owner, a.start_date, a.end_date, a.create_time

    from tbl_activity a

    join tbl_user u1 on u1.id = a.owner
    join tbl_clue_activity_relation car on car.activity_id = a.id
    <!-- 连接 tbl_clue_activity_relation 表 -->
    where car.clue_id = #{clueId,jdbcType=CHAR}

    order by a.create_time desc
  </select>

  <!-- 编写根据名称（name）模糊查询市场活动，且把已经跟 clueId 关联过的市场活动排除的 sql 语句 -->
  <select id="selectActivityForDetailByNameAndClueId" resultMap="BaseResultMap" parameterType="map">
    select
    a.id, a.name, u1.name as owner, a.start_date, a.end_date, a.create_time

    from tbl_activity a

    join tbl_user u1 on u1.id = a.owner

    where a.name like '%' #{activityName} '%' and a.id not in (
        <!-- 子查询根据 clueId 查询与该线索相关联的市场活动 -->
        select activity_id
        from tbl_clue_activity_relation
        where clue_id = #{clueId,jdbcType=CHAR}
    )

    order by a.create_time desc
  </select>

  <!-- 编写根据 id 数组查询与线索相关联的市场活动的明细信息，刷新已关联的市场活动列表 -->
  <select id="selectActivityForDetailByIds" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    a.id, a.name, u1.name as owner, a.start_date, a.end_date, a.create_time

    from tbl_activity a

    join tbl_user u1 on u1.id = a.owner

    where a.id in
    <!-- 遍历数组 -->
    <!-- open 循环开始时插入的字符串 close 循环结束时插入的字符串 构建完整的的 in 子句 -->
    <foreach collection="array" item="id" separator="," open="(" close=")">
      <!-- 获取每一个 id 值 -->
      #{id,jdbcType=CHAR}
    </foreach>

    order by a.create_time desc
  </select>

  <!-- 编写根据名称（name）模糊查询已经跟 clueId 关联过的市场活动的 sql 语句 -->
  <select id="selectActivityForConvertByNameAndClueId" resultMap="BaseResultMap" parameterType="map">
    select
    a.id, a.name, u1.name as owner, a.start_date, a.end_date, a.create_time

    from tbl_activity a

    join tbl_user u1 on u1.id = a.owner

    where a.name like '%' #{activityName} '%' and a.id in (
    <!-- 子查询根据 clueId 查询与该线索相关联的市场活动 -->
    select activity_id
    from tbl_clue_activity_relation
    where clue_id = #{clueId,jdbcType=CHAR}
    )

    order by a.create_time desc
  </select>

  <!-- 编写根据名称（name）模糊查询市场活动的 sql 语句 -->
  <select id="selectActivityForSaveByName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    a.id, a.name, u1.name as owner, a.start_date, a.end_date, a.create_time

    from tbl_activity a

    join tbl_user u1 on u1.id = a.owner

    where a.name like '%' #{activityName} '%'

    order by a.create_time desc
  </select>
</mapper>